[{"/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/index.js":"1","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/reportWebVitals.js":"2","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/App.js":"3","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Header.js":"4","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Home.js":"5","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Product.js":"6","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/products.js":"7","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Checkout.js":"8","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Subtotal.js":"9","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/StateProvider.js":"10","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/reducer.js":"11","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/CheckoutProduct.js":"12","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Login.js":"13","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/firebase.js":"14","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Payment.js":"15","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/axios.js":"16","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Orders.js":"17","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Order.js":"18"},{"size":408,"mtime":1610121208970,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1610032840541,"results":"21","hashOfConfig":"20"},{"size":1856,"mtime":1610380922171,"results":"22","hashOfConfig":"20"},{"size":2068,"mtime":1610389072335,"results":"23","hashOfConfig":"20"},{"size":1771,"mtime":1610201604504,"results":"24","hashOfConfig":"20"},{"size":1207,"mtime":1610202252595,"results":"25","hashOfConfig":"20"},{"size":1590,"mtime":1610122049472,"results":"26","hashOfConfig":"20"},{"size":935,"mtime":1610217242716,"results":"27","hashOfConfig":"20"},{"size":1095,"mtime":1610384601416,"results":"28","hashOfConfig":"20"},{"size":359,"mtime":1610120366453,"results":"29","hashOfConfig":"20"},{"size":778,"mtime":1610380239235,"results":"30","hashOfConfig":"20"},{"size":1182,"mtime":1610388812170,"results":"31","hashOfConfig":"20"},{"size":1962,"mtime":1610208264298,"results":"32","hashOfConfig":"20"},{"size":506,"mtime":1610206475091,"results":"33","hashOfConfig":"20"},{"size":4738,"mtime":1610383477583,"results":"34","hashOfConfig":"20"},{"size":185,"mtime":1610297307653,"results":"35","hashOfConfig":"20"},{"size":948,"mtime":1610387349168,"results":"36","hashOfConfig":"20"},{"size":971,"mtime":1610389794426,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1q5bq6w",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/index.js",[],["80","81"],"/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/reportWebVitals.js",[],"/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/App.js",["82","83"],"import React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport Login from './Login';\nimport Payment from './Payment';\nimport Orders from './Orders';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Checkout from './Checkout';\nimport { auth } from './firebase';\nimport { useGlobalContext } from './StateProvider';\nimport { loadStripe } from '@stripe/stripe-js'; //npm install @stripe/stripe-js\nimport { Elements } from '@stripe/react-stripe-js'; //npm install @stripe/react-stripe-js\n\nconst promise = loadStripe(\n  'pk_test_51I7wrjLZv7WKvm6KLSx3FzeQ8fuxzQAdcH11QlQRFRY2qwPCmZzfOSegwCdXvofJzphwj9OjnJSqQyMOqnlio8sY00acMndlb8'\n);\n\nfunction App() {\n  const [{}, dispatch] = useGlobalContext();\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      console.log('This is user >>>', user);\n      if (user) {\n        dispatch({\n          type: 'SET_USER',\n          payload: user,\n        });\n      } else {\n        dispatch({\n          type: 'SET_USER',\n          payload: null,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/basket\">\n            <Header />\n            <Checkout />\n          </Route>\n          <Route path=\"/checkout\">\n            <Header />\n            {/* wrap Payment component in stripe */}\n            <Elements stripe={promise}>\n              <Payment />\n            </Elements>\n          </Route>\n          <Route path=\"/orders\">\n            <Header />\n            <Orders />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Header.js",["84"],"/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Home.js",[],"/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Product.js",[],"/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/products.js",[],"/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Checkout.js",["85"],"import React from 'react';\nimport './Checkout.css';\nimport Subtotal from './Subtotal';\nimport CheckoutProduct from './CheckoutProduct';\nimport { useGlobalContext } from './StateProvider';\n\nfunction Checkout() {\n  const [{ basket, user }, dispatch] = useGlobalContext();\n  return (\n    <div className=\"checkout\">\n      <div className=\"checkout__left\">\n        <img\n          src=\"https://images-eu.ssl-images-amazon.com/images/G/31/img16/GiftCards/ShopWithPoints/PC_Sliced_01_revised.jpg\"\n          alt=\"\"\n          className=\"checkout__ad\"\n        />\n        <div>\n          <h3 className=\"checkout__name\">Hello {user?.email}</h3>\n          <h2 className=\"checkout__title\">Your Shopping Basket</h2>\n          {basket.map((item) => (\n            <CheckoutProduct {...item} />\n          ))}\n        </div>\n      </div>\n      <div className=\"checkout__right\">\n        <Subtotal />\n      </div>\n    </div>\n  );\n}\n\nexport default Checkout;\n","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Subtotal.js",["86"],"import React from 'react';\nimport './Subtotal.css';\nimport CurrencyFormat from 'react-currency-format';\nimport { useGlobalContext } from './StateProvider';\nimport { getBasketTotal } from './reducer';\nimport { useHistory } from 'react-router-dom';\n\nfunction Subtotal() {\n  const history = useHistory();\n  const [{ basket }, dispatch] = useGlobalContext();\n\n  return (\n    <div className=\"subtotal\">\n      <CurrencyFormat\n        renderText={(value) => (\n          <>\n            <p>\n              Subtotal ({basket.length} items): <strong>{value}</strong>\n            </p>\n            <small className=\"subtotal__gift\">\n              <input type=\"checkbox\" /> This order contains a gift\n            </small>\n          </>\n        )}\n        decimalScale={2}\n        value={getBasketTotal(basket)}\n        displayType={'text'}\n        thousandSeparator={true}\n        prefix={'$'}\n      />\n      <button\n        onClick={() => history.push('/checkout')}\n        disabled={basket.length === 0 && true}\n      >\n        Proceed to Checkout\n      </button>\n    </div>\n  );\n}\n\nexport default Subtotal;\n","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/StateProvider.js",[],"/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/reducer.js",[],"/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/CheckoutProduct.js",["87","88"],"/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Login.js",["89"],"import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport './Login.css';\nimport logo from './media/amazon-logo-black.png';\nimport { auth } from './firebase';\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory(); //it allows to change url and redirect\n  const signIn = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        console.log(user);\n        if (user) history.push('/'); //redirects\n      })\n      .catch((err) => alert(err.message));\n  };\n  const register = (e) => {\n    e.preventDefault();\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((user) => {\n        console.log(user);\n        if (user) history.push('/');\n      })\n      .catch((err) => alert(err.message));\n  };\n\n  return (\n    <div className=\"login\">\n      <Link to=\"/\">\n        <img src={logo} className=\"login__logo\" />\n      </Link>\n      <div className=\"login__container\">\n        <h1>Sign-In</h1>\n        <form action=\"\">\n          <h5>Email</h5>\n          <input\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <h5>Password</h5>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <button\n            className=\"login__signInButton\"\n            type=\"submit\"\n            onClick={signIn}\n          >\n            Sing In\n          </button>\n          <p>\n            By continuing, you agree to Fake Amazon's Conditions of Use and\n            Privacy Notice.\n          </p>\n          <button className=\"login__registerButton\" onClick={register}>\n            Create your Amazon account\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/firebase.js",[],"/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Payment.js",["90","91","92"],"import React, { useState, useEffect } from 'react';\nimport CheckoutProduct from './CheckoutProduct';\nimport './Payment.css';\nimport { useGlobalContext } from './StateProvider';\nimport { Link, useHistory } from 'react-router-dom';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport CurrencyFormat from 'react-currency-format';\nimport { getBasketTotal } from './reducer';\nimport axios from './axios';\nimport { db } from './firebase';\n\nfunction Payment() {\n  const [{ basket, user }, dispatch] = useGlobalContext();\n\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [succeeded, setSucceeded] = useState(false);\n  const [clientSecret, setClientSecret] = useState(true);\n  const stripe = useStripe();\n  const elements = useElements();\n  const history = useHistory();\n\n  useEffect(() => {\n    //to process payment from customer ClientSecret is required with the right amount, that has to change everytime basket changes\n    //this is required from stripe on our express server on cloud functions, then send back to frontend from cloud functions\n    const getClientSecret = async () => {\n      if (getBasketTotal(basket) > 0) {\n        const response = await axios({\n          method: 'post',\n          //stripe expects payment in subunits (ex.pennies or cents)\n          url: `/payment/create?total=${Math.floor(\n            getBasketTotal(basket) * 100\n          )}`,\n        });\n        setClientSecret(response.data.clientSecret);\n      }\n    };\n    getClientSecret();\n  }, [basket && basket]);\n\n  console.log('client secret is -->>>', clientSecret);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setProcessing(true);\n    const payload = await stripe\n      .confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement),\n        },\n      })\n      .then((res) => {\n        const { paymentIntent } = res;\n        //push order to firebase database\n        db.collection('users')\n          .doc(user?.uid)\n          .collection('orders')\n          .doc(paymentIntent.id)\n          .set({\n            basket: basket,\n            amount: paymentIntent.amount,\n            created: paymentIntent.created,\n          });\n\n        setSucceeded(true);\n        setError(null);\n        setProcessing(false);\n\n        dispatch({\n          type: 'EMPTY_BASKET',\n        });\n        //redirect and prevent going back in the browser\n        history.replace('/orders');\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleChange = (e) => {\n    //listen for changes in CardElement and display errors as customer types card details\n    setDisabled(e.empty);\n    setError(e.error ? e.error.message : '');\n  };\n\n  return (\n    <div className=\"payment\">\n      <div className=\"payment__container\">\n        <h1>\n          Checkout (<Link to=\"/basket\">{basket?.length} items</Link>)\n        </h1>\n        <div className=\"payment__section\">\n          <div className=\"payment__title\">\n            <h3>Delivery Address</h3>\n          </div>\n          <div className=\"payment__address\">\n            <p>{user?.email}</p>\n            <p>123 JavaScript</p>\n            <p>San Francisco, CA</p>\n          </div>\n        </div>\n        <div className=\"payment__section\">\n          <div className=\"payment__title\">\n            <h3>Review items and delivery</h3>\n          </div>\n          <div className=\"payment__items\">\n            {basket.map((item) => (\n              <CheckoutProduct {...item} />\n            ))}\n          </div>\n        </div>\n        <div className=\"payment__section\">\n          <div className=\"payment__title\">\n            <h3>Payment method</h3>\n          </div>\n          <div className=\"payment__details\">\n            <form onSubmit={handleSubmit}>\n              <CardElement onChange={handleChange} />\n              <div className=\"payment__priceContainer\">\n                <CurrencyFormat\n                  renderText={(value) => (\n                    <>\n                      <h3>Order Total: {value}</h3>\n                    </>\n                  )}\n                  decimalScale={2}\n                  value={getBasketTotal(basket)}\n                  displayType={'text'}\n                  thousandSeparator={true}\n                  prefix={'$'}\n                />\n                <button disabled={processing || disabled || succeeded}>\n                  <span>{processing ? <p>Processing</p> : 'Buy Now'}</span>\n                </button>\n                {error && <div>{error}</div>}\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Payment;\n","/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/axios.js",[],"/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Orders.js",["93"],"/Users/seb/Documents/Stuff/My Website training/Public Repos/amazon-clone/src/Order.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":20,"column":10,"nodeType":"100","messageId":"101","endLine":20,"endColumn":12},{"ruleId":"102","severity":1,"message":"103","line":37,"column":6,"nodeType":"104","endLine":37,"endColumn":8,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":11,"column":28,"nodeType":"108","messageId":"109","endLine":11,"endColumn":36},{"ruleId":"106","severity":1,"message":"107","line":8,"column":28,"nodeType":"108","messageId":"109","endLine":8,"endColumn":36},{"ruleId":"106","severity":1,"message":"107","line":10,"column":22,"nodeType":"108","messageId":"109","endLine":10,"endColumn":30},{"ruleId":"106","severity":1,"message":"110","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":27},{"ruleId":"106","severity":1,"message":"111","line":15,"column":12,"nodeType":"108","messageId":"109","endLine":15,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":35,"column":9,"nodeType":"114","endLine":35,"endColumn":51},{"ruleId":"102","severity":1,"message":"115","line":40,"column":6,"nodeType":"104","endLine":40,"endColumn":24,"suggestions":"116"},{"ruleId":"102","severity":1,"message":"117","line":40,"column":7,"nodeType":"118","endLine":40,"endColumn":23},{"ruleId":"106","severity":1,"message":"119","line":47,"column":11,"nodeType":"108","messageId":"109","endLine":47,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":8,"column":20,"nodeType":"108","messageId":"109","endLine":8,"endColumn":28},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["122"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'forwardRef' is defined but never used.","'basket' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'basket'. Either include it or remove the dependency array.",["123"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [dispatch]",{"range":"128","text":"129"},"Update the dependencies array to be: [basket]",{"range":"130","text":"131"},[1115,1117],"[dispatch]",[1614,1632],"[basket]"]